/////////////////////////////////////////
///		Descrição do arquivo:
///		@author		Marcos Paulo Batalha Bispo
///		@since		??/04/2017
///		@version	1.0
/////////////////////////////////////////

#ifndef GERENCIADISCIPLINAS_H_INCLUDED
#define GERENCIADISCIPLINAS_H_INCLUDED

#include <string.h>
#include <stdexcept>
#include <stdlib.h>


using namespace std;

class Disciplina {

private:

	//////////////////////////////////////////////////////////////////////////////////
	///		@brief Atributos da disciplina
	///		Toda disciplina possui nome, código, índice e "espaço e tamanho certo"
	///		(atributos para melhor armazenamento em arquivo-texto)
	//////////////////////////////////////////////////////////////////////////////////
	string nome;
	string codigo;
	int indice;
	const static char ESPACO;
    const static int TAMANHO_CERTO;

    //////////////////////////////////////////////////////////////////////////////////
    ///		@param nome Nome que será validado
    ///		Testa se todos os caracteres são letras ou espaços usando a função isalpha.
    //////////////////////////////////////////////////////////////////////////////////
	void validarNome (string nome) throw (invalid_argument);

	//////////////////////////////////////////////////////////////////////////////////
	///		@param codigo
	///		Testa se todos os caracteres são letras ou espaços usando a função isalpha.
	//////////////////////////////////////////////////////////////////////////////////
	void validarCodigo (string codigo) throw (invalid_argument);

public:

	//////////////////////////////////////////////////////////////////////////////////
	///		@brief Construtor
	//////////////////////////////////////////////////////////////////////////////////
	Disciplina();

	//////////////////////////////////////////////////////////////////////////////////
	///		@brief Propriedades
	//////////////////////////////////////////////////////////////////////////////////
	void setNome(string)throw (invalid_argument);
	string getNome();
	void setCodigo(string)throw (invalid_argument);
	string getCodigo();


};


class GerenciaDisciplinas{
private:
	//////////////////////////////////////////////////////////////////////////////////
	///		@brief Atributos do Gerenciador de Disciplinas
	///		Opção: Seleciona uma das constantes utilizadas para realizar uma ação
	///		escolhida pelo usuário
	///		
	///		arquivo_disciplina e lista_disciplinas são ponteiros para os arquivos
	///		relacionados a disciplinas
	///		
	///		nome_arquivo é uma variável para uso temporário de manejo de arquivos
	///	
	///		CONTINUAR e SAIR são constantes que representam opções de ações pro usuário
	//////////////////////////////////////////////////////////////////////////////////
	int opcao;
	FILE * arquivo_disciplina;
	FILE * lista_disciplinas;
	string nome_arquivo;
	const static int CONTINUAR;
	const static int SAIR;

public:

	//////////////////////////////////////////////////////////////////////////////////
	///		@brief Construtor
	//////////////////////////////////////////////////////////////////////////////////
	GerenciaDisciplinas();
	/*~GerenciaDisciplina(); */

	//////////////////////////////////////////////////////////////////////////////////
	///		@brief Cria uma nova disciplina
	///		Cria uma nova disciplina, seu código e já adiciona no arquivo-texto
	//////////////////////////////////////////////////////////////////////////////////
	void criarDisciplina();

	//////////////////////////////////////////////////////////////////////////////////
	///		@brief Remove uma disciplina
	///		Remove uma disciplina do arquivo-texto
	//////////////////////////////////////////////////////////////////////////////////
    void removerDisciplina();

};

#endif
